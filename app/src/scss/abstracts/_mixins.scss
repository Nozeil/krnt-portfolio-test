@use "./variables";

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin dash($width, $height, $bg-color) {
  @include size($width, $height);

  display: inline-block;
  background-color: $bg-color;
}

@mixin row($justify, $align) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin column {
  display: flex;
  flex-direction: column;
}

@mixin column-with-gap($gap) {
  @include column;

  gap: $gap;
}

@mixin column-center {
  @include column;
  justify-content: center;
  align-items: center;
}

@mixin column-center-with-gap($gap) {
  @include column-center;

  gap: $gap;
}

@mixin row-with-gap($justify, $align, $gap) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

@mixin solid-border($width, $color) {
  border: $width solid $color;
}

@mixin fixed($z) {
  position: fixed;
  z-index: map-get($map: variables.$z-index, $key: $z);
}

@mixin filled-circle($size, $color) {
  @include size($size, $size);

  border-radius: 50%;
  background-color: $color;
}

@mixin burger-left($width) {
  left: -$width;

  &_opened {
    transform: translateX($width);
  }
}

@mixin input {
  $padding-x: map-get(
    $map: variables.$spacing,
    $key: "spacing-20",
  );
  $border-width: map-get(
    $map: variables.$border-line-width,
    $key: "border-1",
  );

  @include solid-border($border-width, variables.$black);

  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  font-size: map-get($map: variables.$font-sizes, $key: "text-xs");
  outline: none;

  &_error {
    color: variables.$red;
    border-color: variables.$red;
  }
}

@mixin label {
  &_error {
    color: variables.$red;
  }
}

@mixin xl-media-query {
  $mw: map-get(
    $map: variables.$breakpoints,
    $key: "xl",
  );

  @media (max-width: $mw) {
    @content;
  }
}

@mixin lg-media-query {
  $mw: map-get(
    $map: variables.$breakpoints,
    $key: "lg",
  );

  @media (max-width: $mw) {
    @content;
  }
}

@mixin sm-media-query {
  $mw: map-get(
    $map: variables.$breakpoints,
    $key: "sm",
  );

  @media (max-width: $mw) {
    @content;
  }
}

@mixin xs-media-query {
  $mw: map-get(
    $map: variables.$breakpoints,
    $key: "xs",
  );

  @media (max-width: $mw) {
    @content;
  }
}
